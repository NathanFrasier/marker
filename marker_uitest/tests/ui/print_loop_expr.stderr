warning: print test
  --> $DIR/print_loop_expr.rs:4:5
   |
4  | /     let _print_exprs = {
5  | |         'label: loop {
6  | |             break 'label;
7  | |         }
8  | |
9  | |         loop {}
10 | |     };
   | |______^
   |
   = note: Block(
               BlockExpr {
                   data: CommonExprData {
                       _lifetime: PhantomData<&()>,
                       id: ExprId(..),
                       span: SpanId(..),
                   },
                   stmts: [
                       Expr(
                           Loop(
                               LoopExpr {
                                   data: CommonExprData {
                                       _lifetime: PhantomData<&()>,
                                       id: ExprId(..),
                                       span: SpanId(..),
                                   },
                                   label: Some(
                                       Ident {
                                           name: "'label",
                                           span: Span {
                                               source: File(
                                                   "$DIR/print_loop_expr.rs",
                                               ),
                                               start: 99,
                                               end: 105,
                                           },
                                       },
                                   ),
                                   body: Block(
                                       BlockExpr {
                                           data: CommonExprData {
                                               _lifetime: PhantomData<&()>,
                                               id: ExprId(..),
                                               span: SpanId(..),
                                           },
                                           stmts: [
                                               Expr(
                                                   Break(
                                                       BreakExpr {
                                                           data: CommonExprData {
                                                               _lifetime: PhantomData<&()>,
                                                               id: ExprId(..),
                                                               span: SpanId(..),
                                                           },
                                                           label: Some(
                                                               Ident {
                                                                   name: "'label",
                                                                   span: Span {
                                                                       source: File(
                                                                           "$DIR/print_loop_expr.rs",
                                                                       ),
                                                                       start: 132,
                                                                       end: 138,
                                                                   },
                                                               },
                                                           ),
                                                           target_id: ExprId(..),
                                                           expr: None,
                                                       },
                                                   ),
                                               ),
                                           ],
                                           expr: None,
                                           label: None,
                                           is_unsafe: false,
                                       },
                                   ),
                               },
                           ),
                       ),
                   ],
                   expr: Some(
                       Loop(
                           LoopExpr {
                               data: CommonExprData {
                                   _lifetime: PhantomData<&()>,
                                   id: ExprId(..),
                                   span: SpanId(..),
                               },
                               label: None,
                               body: Block(
                                   BlockExpr {
                                       data: CommonExprData {
                                           _lifetime: PhantomData<&()>,
                                           id: ExprId(..),
                                           span: SpanId(..),
                                       },
                                       stmts: [],
                                       expr: None,
                                       label: None,
                                       is_unsafe: false,
                                   },
                               ),
                           },
                       ),
                   ),
                   label: None,
                   is_unsafe: false,
               },
           )
   = note: `#[warn(marker::test_lint)]` on by default

warning: print test
  --> $DIR/print_loop_expr.rs:14:5
   |
14 | /     let _print_exprs = {
15 | |         while cond {}
16 | |
17 | |         while let Some(_) = opt {
18 | |             opt = None;
19 | |         }
20 | |     };
   | |______^
   |
   = note: Block(
               BlockExpr {
                   data: CommonExprData {
                       _lifetime: PhantomData<&()>,
                       id: ExprId(..),
                       span: SpanId(..),
                   },
                   stmts: [
                       Expr(
                           While(
                               WhileExpr {
                                   data: CommonExprData {
                                       _lifetime: PhantomData<&()>,
                                       id: ExprId(..),
                                       span: SpanId(..),
                                   },
                                   label: None,
                                   condition: Path(
                                       PathExpr {
                                           data: CommonExprData {
                                               _lifetime: PhantomData<&()>,
                                               id: ExprId(..),
                                               span: SpanId(..),
                                           },
                                           path: AstQPath {
                                               self_ty: None,
                                               path_ty: None,
                                               path: AstPath {
                                                   segments: [
                                                       AstPathSegment {
                                                           ident: Ident {
                                                               name: "cond",
                                                               span: Span {
                                                                   source: File(
                                                                       "$DIR/print_loop_expr.rs",
                                                                   ),
                                                                   start: 264,
                                                                   end: 268,
                                                               },
                                                           },
                                                           generics: GenericArgs {
                                                               args: [],
                                                           },
                                                       },
                                                   ],
                                               },
                                               target: Var(
                                                   VarId(..),
                                               ),
                                           },
                                       },
                                   ),
                                   body: Block(
                                       BlockExpr {
                                           data: CommonExprData {
                                               _lifetime: PhantomData<&()>,
                                               id: ExprId(..),
                                               span: SpanId(..),
                                           },
                                           stmts: [],
                                           expr: None,
                                           label: None,
                                           is_unsafe: false,
                                       },
                                   ),
                               },
                           ),
                       ),
                   ],
                   expr: Some(
                       While(
                           WhileExpr {
                               data: CommonExprData {
                                   _lifetime: PhantomData<&()>,
                                   id: ExprId(..),
                                   span: SpanId(..),
                               },
                               label: None,
                               condition: Let(
                                   LetExpr {
                                       data: CommonExprData {
                                           _lifetime: PhantomData<&()>,
                                           id: ExprId(..),
                                           span: SpanId(..),
                                       },
                                       pat: Struct(
                                           StructPat {
                                               data: CommonPatData {
                                                   _lifetime: PhantomData<&()>,
                                                   span: SpanId(..),
                                               },
                                               path: AstPath {
                                                   segments: [
                                                       AstPathSegment {
                                                           ident: Ident {
                                                               name: "Some",
                                                               span: Span {
                                                                   source: File(
                                                                       "$DIR/print_loop_expr.rs",
                                                                   ),
                                                                   start: 291,
                                                                   end: 295,
                                                               },
                                                           },
                                                           generics: GenericArgs {
                                                               args: [],
                                                           },
                                                       },
                                                   ],
                                               },
                                               fields: [
                                                   StructFieldPat {
                                                       span: SpanId(..),
                                                       ident: SymbolId(..),
                                                       pat: Wildcard(
                                                           WildcardPat {
                                                               data: CommonPatData {
                                                                   _lifetime: PhantomData<&()>,
                                                                   span: SpanId(..),
                                                               },
                                                           },
                                                       ),
                                                   },
                                               ],
                                               is_non_exhaustive: false,
                                           },
                                       ),
                                       scrutinee: Path(
                                           PathExpr {
                                               data: CommonExprData {
                                                   _lifetime: PhantomData<&()>,
                                                   id: ExprId(..),
                                                   span: SpanId(..),
                                               },
                                               path: AstQPath {
                                                   self_ty: None,
                                                   path_ty: None,
                                                   path: AstPath {
                                                       segments: [
                                                           AstPathSegment {
                                                               ident: Ident {
                                                                   name: "opt",
                                                                   span: Span {
                                                                       source: File(
                                                                           "$DIR/print_loop_expr.rs",
                                                                       ),
                                                                       start: 301,
                                                                       end: 304,
                                                                   },
                                                               },
                                                               generics: GenericArgs {
                                                                   args: [],
                                                               },
                                                           },
                                                       ],
                                                   },
                                                   target: Var(
                                                       VarId(..),
                                                   ),
                                               },
                                           },
                                       ),
                                   },
                               ),
                               body: Block(
                                   BlockExpr {
                                       data: CommonExprData {
                                           _lifetime: PhantomData<&()>,
                                           id: ExprId(..),
                                           span: SpanId(..),
                                       },
                                       stmts: [
                                           Expr(
                                               Assign(
                                                   AssignExpr {
                                                       data: CommonExprData {
                                                           _lifetime: PhantomData<&()>,
                                                           id: ExprId(..),
                                                           span: SpanId(..),
                                                       },
                                                       assignee: Place(
                                                           Path(
                                                               PathExpr {
                                                                   data: CommonExprData {
                                                                       _lifetime: PhantomData<&()>,
                                                                       id: ExprId(..),
                                                                       span: SpanId(..),
                                                                   },
                                                                   path: AstQPath {
                                                                       self_ty: None,
                                                                       path_ty: None,
                                                                       path: AstPath {
                                                                           segments: [
                                                                               AstPathSegment {
                                                                                   ident: Ident {
                                                                                       name: "opt",
                                                                                       span: Span {
                                                                                           source: File(
                                                                                               "$DIR/print_loop_expr.rs",
                                                                                           ),
                                                                                           start: 319,
                                                                                           end: 322,
                                                                                       },
                                                                                   },
                                                                                   generics: GenericArgs {
                                                                                       args: [],
                                                                                   },
                                                                               },
                                                                           ],
                                                                       },
                                                                       target: Var(
                                                                           VarId(..),
                                                                       ),
                                                                   },
                                                               },
                                                           ),
                                                       ),
                                                       value: Ctor(
                                                           CtorExpr {
                                                               data: CommonExprData {
                                                                   _lifetime: PhantomData<&()>,
                                                                   id: ExprId(..),
                                                                   span: SpanId(..),
                                                               },
                                                               path: AstQPath {
                                                                   self_ty: None,
                                                                   path_ty: None,
                                                                   path: AstPath {
                                                                       segments: [
                                                                           AstPathSegment {
                                                                               ident: Ident {
                                                                                   name: "None",
                                                                                   span: Span {
                                                                                       source: File(
                                                                                           "$DIR/print_loop_expr.rs",
                                                                                       ),
                                                                                       start: 325,
                                                                                       end: 329,
                                                                                   },
                                                                               },
                                                                               generics: GenericArgs {
                                                                                   args: [],
                                                                               },
                                                                           },
                                                                       ],
                                                                   },
                                                                   target: Variant(
                                                                       VariantId(..),
                                                                   ),
                                                               },
                                                               fields: [],
                                                               base: None,
                                                           },
                                                       ),
                                                       op: None,
                                                   },
                                               ),
                                           ),
                                       ],
                                       expr: None,
                                       label: None,
                                       is_unsafe: false,
                                   },
                               ),
                           },
                       ),
                   ),
                   label: None,
                   is_unsafe: false,
               },
           )

warning: print test
  --> $DIR/print_loop_expr.rs:24:5
   |
24 | /     let _print_exprs = {
25 | |         for _ in 0..10 {}
26 | |
27 | |         for (a, b) in tuple_slice {
28 | |             c += a + b;
29 | |         }
30 | |     };
   | |______^
   |
   = note: Block(
               BlockExpr {
                   data: CommonExprData {
                       _lifetime: PhantomData<&()>,
                       id: ExprId(..),
                       span: SpanId(..),
                   },
                   stmts: [
                       Expr(
                           For(
                               ForExpr {
                                   data: CommonExprData {
                                       _lifetime: PhantomData<&()>,
                                       id: ExprId(..),
                                       span: SpanId(..),
                                   },
                                   label: None,
                                   pat: Wildcard(
                                       WildcardPat {
                                           data: CommonPatData {
                                               _lifetime: PhantomData<&()>,
                                               span: SpanId(..),
                                           },
                                       },
                                   ),
                                   iterable: Range(
                                       RangeExpr {
                                           data: CommonExprData {
                                               _lifetime: PhantomData<&()>,
                                               id: ExprId(..),
                                               span: SpanId(..),
                                           },
                                           start: Some(
                                               IntLit(
                                                   IntLitExpr {
                                                       data: CommonExprData {
                                                           _lifetime: PhantomData<&()>,
                                                           id: ExprId(..),
                                                           span: SpanId(..),
                                                       },
                                                       value: 0,
                                                       suffix: None,
                                                   },
                                               ),
                                           ),
                                           end: Some(
                                               IntLit(
                                                   IntLitExpr {
                                                       data: CommonExprData {
                                                           _lifetime: PhantomData<&()>,
                                                           id: ExprId(..),
                                                           span: SpanId(..),
                                                       },
                                                       value: 10,
                                                       suffix: None,
                                                   },
                                               ),
                                           ),
                                           is_inclusive: false,
                                       },
                                   ),
                                   body: Block(
                                       BlockExpr {
                                           data: CommonExprData {
                                               _lifetime: PhantomData<&()>,
                                               id: ExprId(..),
                                               span: SpanId(..),
                                           },
                                           stmts: [],
                                           expr: None,
                                           label: None,
                                           is_unsafe: false,
                                       },
                                   ),
                               },
                           ),
                       ),
                   ],
                   expr: Some(
                       For(
                           ForExpr {
                               data: CommonExprData {
                                   _lifetime: PhantomData<&()>,
                                   id: ExprId(..),
                                   span: SpanId(..),
                               },
                               label: None,
                               pat: Tuple(
                                   TuplePat {
                                       data: CommonPatData {
                                           _lifetime: PhantomData<&()>,
                                           span: SpanId(..),
                                       },
                                       elements: [
                                           Ident(
                                               IdentPat {
                                                   data: CommonPatData {
                                                       _lifetime: PhantomData<&()>,
                                                       span: SpanId(..),
                                                   },
                                                   name: SymbolId(..),
                                                   var: VarId(..),
                                                   is_mut: false,
                                                   is_ref: false,
                                                   binding_pat: None,
                                               },
                                           ),
                                           Ident(
                                               IdentPat {
                                                   data: CommonPatData {
                                                       _lifetime: PhantomData<&()>,
                                                       span: SpanId(..),
                                                   },
                                                   name: SymbolId(..),
                                                   var: VarId(..),
                                                   is_mut: false,
                                                   is_ref: false,
                                                   binding_pat: None,
                                               },
                                           ),
                                       ],
                                   },
                               ),
                               iterable: Path(
                                   PathExpr {
                                       data: CommonExprData {
                                           _lifetime: PhantomData<&()>,
                                           id: ExprId(..),
                                           span: SpanId(..),
                                       },
                                       path: AstQPath {
                                           self_ty: None,
                                           path_ty: None,
                                           path: AstPath {
                                               segments: [
                                                   AstPathSegment {
                                                       ident: Ident {
                                                           name: "tuple_slice",
                                                           span: Span {
                                                               source: File(
                                                                   "$DIR/print_loop_expr.rs",
                                                               ),
                                                               start: 482,
                                                               end: 493,
                                                           },
                                                       },
                                                       generics: GenericArgs {
                                                           args: [],
                                                       },
                                                   },
                                               ],
                                           },
                                           target: Var(
                                               VarId(..),
                                           ),
                                       },
                                   },
                               ),
                               body: Block(
                                   BlockExpr {
                                       data: CommonExprData {
                                           _lifetime: PhantomData<&()>,
                                           id: ExprId(..),
                                           span: SpanId(..),
                                       },
                                       stmts: [
                                           Expr(
                                               Assign(
                                                   AssignExpr {
                                                       data: CommonExprData {
                                                           _lifetime: PhantomData<&()>,
                                                           id: ExprId(..),
                                                           span: SpanId(..),
                                                       },
                                                       assignee: Place(
                                                           Path(
                                                               PathExpr {
                                                                   data: CommonExprData {
                                                                       _lifetime: PhantomData<&()>,
                                                                       id: ExprId(..),
                                                                       span: SpanId(..),
                                                                   },
                                                                   path: AstQPath {
                                                                       self_ty: None,
                                                                       path_ty: None,
                                                                       path: AstPath {
                                                                           segments: [
                                                                               AstPathSegment {
                                                                                   ident: Ident {
                                                                                       name: "c",
                                                                                       span: Span {
                                                                                           source: File(
                                                                                               "$DIR/print_loop_expr.rs",
                                                                                           ),
                                                                                           start: 508,
                                                                                           end: 509,
                                                                                       },
                                                                                   },
                                                                                   generics: GenericArgs {
                                                                                       args: [],
                                                                                   },
                                                                               },
                                                                           ],
                                                                       },
                                                                       target: Var(
                                                                           VarId(..),
                                                                       ),
                                                                   },
                                                               },
                                                           ),
                                                       ),
                                                       value: BinaryOp(
                                                           BinaryOpExpr {
                                                               data: CommonExprData {
                                                                   _lifetime: PhantomData<&()>,
                                                                   id: ExprId(..),
                                                                   span: SpanId(..),
                                                               },
                                                               left: Path(
                                                                   PathExpr {
                                                                       data: CommonExprData {
                                                                           _lifetime: PhantomData<&()>,
                                                                           id: ExprId(..),
                                                                           span: SpanId(..),
                                                                       },
                                                                       path: AstQPath {
                                                                           self_ty: None,
                                                                           path_ty: None,
                                                                           path: AstPath {
                                                                               segments: [
                                                                                   AstPathSegment {
                                                                                       ident: Ident {
                                                                                           name: "a",
                                                                                           span: Span {
                                                                                               source: File(
                                                                                                   "$DIR/print_loop_expr.rs",
                                                                                               ),
                                                                                               start: 513,
                                                                                               end: 514,
                                                                                           },
                                                                                       },
                                                                                       generics: GenericArgs {
                                                                                           args: [],
                                                                                       },
                                                                                   },
                                                                               ],
                                                                           },
                                                                           target: Var(
                                                                               VarId(..),
                                                                           ),
                                                                       },
                                                                   },
                                                               ),
                                                               right: Path(
                                                                   PathExpr {
                                                                       data: CommonExprData {
                                                                           _lifetime: PhantomData<&()>,
                                                                           id: ExprId(..),
                                                                           span: SpanId(..),
                                                                       },
                                                                       path: AstQPath {
                                                                           self_ty: None,
                                                                           path_ty: None,
                                                                           path: AstPath {
                                                                               segments: [
                                                                                   AstPathSegment {
                                                                                       ident: Ident {
                                                                                           name: "b",
                                                                                           span: Span {
                                                                                               source: File(
                                                                                                   "$DIR/print_loop_expr.rs",
                                                                                               ),
                                                                                               start: 517,
                                                                                               end: 518,
                                                                                           },
                                                                                       },
                                                                                       generics: GenericArgs {
                                                                                           args: [],
                                                                                       },
                                                                                   },
                                                                               ],
                                                                           },
                                                                           target: Var(
                                                                               VarId(..),
                                                                           ),
                                                                       },
                                                                   },
                                                               ),
                                                               kind: Add,
                                                           },
                                                       ),
                                                       op: Some(
                                                           Add,
                                                       ),
                                                   },
                                               ),
                                           ),
                                       ],
                                       expr: None,
                                       label: None,
                                       is_unsafe: false,
                                   },
                               ),
                           },
                       ),
                   ),
                   label: None,
                   is_unsafe: false,
               },
           )

warning: 3 warnings emitted

