warning: print type test
  --> $DIR/print_semantic_ty.rs:28:5
   |
28 |     let _ty_generic: T = t;
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Generic(
               SemGenericTy {
                   _lifetime: PhantomData<&()>,
                   generic_id: GenericId(..),
               },
           )
   = note: `#[warn(marker::test_lint)]` on by default

warning: print type test
  --> $DIR/print_semantic_ty.rs:36:5
   |
36 |     let _ty: u32 = 10;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: Num(
               u32,
           )

warning: print type test
  --> $DIR/print_semantic_ty.rs:37:5
   |
37 |     let _ty_primitive: Option<(u8, u16, u32, u64, u128, usize)> = None;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Adt(
               SemAdtTy {
                   def_id: TyDefId(..),
                   generics: SemGenericArgs {
                       args: [
                           Ty(
                               Tuple(
                                   (
                                       Num(
                                           u8,
                                       ),
                                       Num(
                                           u16,
                                       ),
                                       Num(
                                           u32,
                                       ),
                                       Num(
                                           u64,
                                       ),
                                       Num(
                                           u128,
                                       ),
                                       Num(
                                           usize,
                                       ),
                                   ),
                               ),
                           ),
                       ],
                   },
               },
           )

warning: print type test
  --> $DIR/print_semantic_ty.rs:38:5
   |
38 |     let _ty_primitive: Option<(i8, i16, i32, i64, i128, isize)> = None;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Adt(
               SemAdtTy {
                   def_id: TyDefId(..),
                   generics: SemGenericArgs {
                       args: [
                           Ty(
                               Tuple(
                                   (
                                       Num(
                                           i8,
                                       ),
                                       Num(
                                           i16,
                                       ),
                                       Num(
                                           i32,
                                       ),
                                       Num(
                                           i64,
                                       ),
                                       Num(
                                           i128,
                                       ),
                                       Num(
                                           isize,
                                       ),
                                   ),
                               ),
                           ),
                       ],
                   },
               },
           )

warning: print type test
  --> $DIR/print_semantic_ty.rs:39:5
   |
39 |     let _ty_primitive: Option<(char, bool, f32, f64)> = None;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Adt(
               SemAdtTy {
                   def_id: TyDefId(..),
                   generics: SemGenericArgs {
                       args: [
                           Ty(
                               Tuple(
                                   (
                                       Text(
                                           char,
                                       ),
                                       Bool(
                                           bool,
                                       ),
                                       Num(
                                           f32,
                                       ),
                                       Num(
                                           f64,
                                       ),
                                   ),
                               ),
                           ),
                       ],
                   },
               },
           )

warning: print type test
  --> $DIR/print_semantic_ty.rs:40:5
   |
40 |     let _ty_sequence: [u32; 1] = [10];
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Array(
               [
                   Num(
                       u32,
                   ),
               ],
           )

warning: print type test
  --> $DIR/print_semantic_ty.rs:42:5
   |
42 |     let _ty_sequence: &[u32] = slice;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Ref(
               SemRefTy {
                   mutability: Unmut,
                   inner_ty: Slice(
                       [
                           Num(
                               u32,
                           ),
                       ],
                   ),
               },
           )

warning: print type test
  --> $DIR/print_semantic_ty.rs:43:5
   |
43 |     let _ty_ptr: Option<(&'static str, *const i32, *mut i32)> = None;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Adt(
               SemAdtTy {
                   def_id: TyDefId(..),
                   generics: SemGenericArgs {
                       args: [
                           Ty(
                               Tuple(
                                   (
                                       Ref(
                                           SemRefTy {
                                               mutability: Unmut,
                                               inner_ty: Text(
                                                   str,
                                               ),
                                           },
                                       ),
                                       RawPtr(
                                           SemRawPtrTy {
                                               mutability: Unmut,
                                               inner_ty: Num(
                                                   i32,
                                               ),
                                           },
                                       ),
                                       RawPtr(
                                           SemRawPtrTy {
                                               mutability: Mut,
                                               inner_ty: Num(
                                                   i32,
                                               ),
                                           },
                                       ),
                                   ),
                               ),
                           ),
                       ],
                   },
               },
           )

warning: print type test
  --> $DIR/print_semantic_ty.rs:44:5
   |
44 |     let _ty_fn_item: fn(u32) -> f32 = u32_to_f32;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: FnTy(
               SemFnTy {
                   fn_id: ItemId(..),
                   generics: SemGenericArgs {
                       args: [],
                   },
               },
           )

warning: print type test
  --> $DIR/print_semantic_ty.rs:49:5
   |
49 |     let _ty_fn_ptr: fn(u32) -> f32 = fn_ptr;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: FnPtr(
               SemFnPtrTy {
                   safety: Safe,
                   abi: Default,
                   params: [
                       Num(
                           u32,
                       ),
                   ],
                   return_ty: Num(
                       f32,
                   ),
               },
           )

warning: print type test
  --> $DIR/print_semantic_ty.rs:53:5
   |
53 |     let _ty_simple_alias: AliasTy = AliasTy::new(12);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Adt(
               SemAdtTy {
                   def_id: TyDefId(..),
                   generics: SemGenericArgs {
                       args: [
                           Ty(
                               Num(
                                   u32,
                               ),
                           ),
                           Ty(
                               Adt(
                                   SemAdtTy {
                                       def_id: TyDefId(..),
                                       generics: SemGenericArgs {
                                           args: [],
                                       },
                                   },
                               ),
                           ),
                       ],
                   },
               },
           )

warning: print type test
  --> $DIR/print_semantic_ty.rs:55:5
   |
55 |     let _ty_adt: String = String::new();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Adt(
               SemAdtTy {
                   def_id: TyDefId(..),
                   generics: SemGenericArgs {
                       args: [],
                   },
               },
           )

warning: print type test
  --> $DIR/print_semantic_ty.rs:56:5
   |
56 |     let _ty_dyn_simple: Option<Box<dyn Debug>> = None;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Adt(
               SemAdtTy {
                   def_id: TyDefId(..),
                   generics: SemGenericArgs {
                       args: [
                           Ty(
                               Adt(
                                   SemAdtTy {
                                       def_id: TyDefId(..),
                                       generics: SemGenericArgs {
                                           args: [
                                               Ty(
                                                   TraitObj(
                                                       SemTraitObjTy {
                                                           bound: [
                                                               SemTraitBound {
                                                                   is_relaxed: false,
                                                                   trait_id: TyDefId(..),
                                                                   trait_generic_args: SemGenericArgs {
                                                                       args: [],
                                                                   },
                                                               },
                                                           ],
                                                       },
                                                   ),
                                               ),
                                               Ty(
                                                   Adt(
                                                       SemAdtTy {
                                                           def_id: TyDefId(..),
                                                           generics: SemGenericArgs {
                                                               args: [],
                                                           },
                                                       },
                                                   ),
                                               ),
                                           ],
                                       },
                                   },
                               ),
                           ),
                       ],
                   },
               },
           )

warning: print type test
  --> $DIR/print_semantic_ty.rs:57:5
   |
57 |     let _ty_dyn_complex: Option<Box<dyn Iterator<Item = i32> + 'static>> = None;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Adt(
               SemAdtTy {
                   def_id: TyDefId(..),
                   generics: SemGenericArgs {
                       args: [
                           Ty(
                               Adt(
                                   SemAdtTy {
                                       def_id: TyDefId(..),
                                       generics: SemGenericArgs {
                                           args: [
                                               Ty(
                                                   TraitObj(
                                                       SemTraitObjTy {
                                                           bound: [
                                                               SemTraitBound {
                                                                   is_relaxed: false,
                                                                   trait_id: TyDefId(..),
                                                                   trait_generic_args: SemGenericArgs {
                                                                       args: [
                                                                           TyBinding(
                                                                               SemTyBindingArg {
                                                                                   binding_target: ItemId(..),
                                                                                   ty: Num(
                                                                                       i32,
                                                                                   ),
                                                                               },
                                                                           ),
                                                                       ],
                                                                   },
                                                               },
                                                           ],
                                                       },
                                                   ),
                                               ),
                                               Ty(
                                                   Adt(
                                                       SemAdtTy {
                                                           def_id: TyDefId(..),
                                                           generics: SemGenericArgs {
                                                               args: [],
                                                           },
                                                       },
                                                   ),
                                               ),
                                           ],
                                       },
                                   },
                               ),
                           ),
                       ],
                   },
               },
           )

warning: 14 warnings emitted

